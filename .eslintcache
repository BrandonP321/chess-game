[{"D:\\code\\personal-projects\\chess-game\\src\\index.js":"1","D:\\code\\personal-projects\\chess-game\\src\\App.js":"2","D:\\code\\personal-projects\\chess-game\\src\\reportWebVitals.js":"3","D:\\code\\personal-projects\\chess-game\\src\\pages\\GameRoom\\index.js":"4","D:\\code\\personal-projects\\chess-game\\src\\classes\\Board.js":"5","D:\\code\\personal-projects\\chess-game\\src\\classes\\Pawn.js":"6","D:\\code\\personal-projects\\chess-game\\src\\classes\\Rook.js":"7","D:\\code\\personal-projects\\chess-game\\src\\classes\\Bishop.js":"8","D:\\code\\personal-projects\\chess-game\\src\\classes\\Queen.js":"9","D:\\code\\personal-projects\\chess-game\\src\\classes\\Knight.js":"10","D:\\code\\personal-projects\\chess-game\\src\\classes\\Piece.js":"11","D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\index.js":"12","D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\createBoard.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":217,"mtime":1608634617920,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":323,"mtime":1608634617957,"results":"18","hashOfConfig":"15"},{"size":4713,"mtime":1608616119728,"results":"19","hashOfConfig":"15"},{"size":1475,"mtime":1608700066014,"results":"20","hashOfConfig":"15"},{"size":2432,"mtime":1608676163854,"results":"21","hashOfConfig":"15"},{"size":2670,"mtime":1608676342538,"results":"22","hashOfConfig":"15"},{"size":5137,"mtime":1608676528914,"results":"23","hashOfConfig":"15"},{"size":1202,"mtime":1608634617932,"results":"24","hashOfConfig":"15"},{"size":1296,"mtime":1608634617934,"results":"25","hashOfConfig":"15"},{"size":14169,"mtime":1608699528860,"results":"26","hashOfConfig":"15"},{"size":1807,"mtime":1608676934656,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"b24jsc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\code\\personal-projects\\chess-game\\src\\index.js",[],["57","58"],"D:\\code\\personal-projects\\chess-game\\src\\App.js",["59"],"D:\\code\\personal-projects\\chess-game\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\chess-game\\src\\pages\\GameRoom\\index.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Board.js",["60","61","62","63","64","65","66","67"],"const Pawn = require('./Pawn')\r\nconst Knight = require('./Knight')\r\nconst Rook = require('./Rook')\r\nconst Bishop = require('./Bishop')\r\nconst Queen = require('./Queen')\r\n\r\n\r\nclass Board {\r\n    constructor(pieces = []) {\r\n        this.pieces = pieces\r\n        this.letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\r\n    }\r\n\r\n    addPiece(piece) {\r\n        // add a new piece to the pieces array\r\n        this.pieces.push(piece)\r\n    }\r\n\r\n    removePiece(piece) {\r\n        // remove piece when it is taken off the board\r\n        // this.pieces = this.pieces.filter()\r\n    }\r\n\r\n    getPotentialMoves(pieceLocation) {\r\n        // find which piece is at the given location\r\n        const chosenPiece = this.pieces.filter(piece => piece.currentLocation.letter == pieceLocation.letter && piece.currentLocation.number == pieceLocation.number)[0]\r\n\r\n        // get possible locations of piece\r\n        let possibleLocations = chosenPiece.getPossibleMoves()\r\n\r\n        // locations of friendly pieces blocking a path\r\n        const blockedSpots = []\r\n\r\n        // filter possible locations by pieces locations of other pieces on board\r\n        let availableSpots = possibleLocations.filter(newLocation => {\r\n            // iterate over pieces on board\r\n            for (var i = 0; i < this.pieces.length; i++) {\r\n                let piece = this.pieces[i]\r\n\r\n\r\n                // if piece's location matches potential location and is not friendly\r\n                if (piece.currentLocation.letter === newLocation.letter &&\r\n                    piece.currentLocation.number === newLocation.number) {\r\n                    // if piece being moved is a knight, we don't need to worry about a path being blocked by a friendly piece\r\n                    if (chosenPiece.pieceType === 'knight') {\r\n                        return false\r\n                    } else if (piece.color === chosenPiece.color) {\r\n                        // add location of piece to blockedSpots array\r\n                        blockedSpots.push(piece.currentLocation)\r\n                        // return false to remove this spot option\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            // return true if nothing has been returned yet\r\n            return true\r\n        })\r\n        \r\n        console.log('spots before removing paths:')\r\n        // if any paths are blocked, remove the blocked spots from possible moves\r\n        if (blockedSpots.length > 0) {\r\n            availableSpots = chosenPiece.removeBlockedPaths(blockedSpots, availableSpots)\r\n        }\r\n\r\n        \r\n        return availableSpots\r\n    }\r\n\r\n    addPiece(piece) {\r\n        this.pieces.push(piece)\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Board;\r\n\r\n\r\n\r\n\r\n// // add all pieces to board\r\n// const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\r\n\r\n// const pawns = []\r\n// // create white pawns and push them to the array\r\n// for (let i = 0; i < 8; i++) {\r\n//     let newPawn = new Pawn({ letter: letters[i], number: 2 }, 'white')\r\n    \r\n//     pawns.push(newPawn)\r\n// }\r\n// // create black pawns and push them to the array\r\n// for (let i = 0; i < 8; i++) {\r\n//     let newPawn = new Pawn({ letter: letters[i], number: 7 }, 'black')\r\n    \r\n//     pawns.push(newPawn)\r\n// }\r\n\r\n// const knights = [\r\n//     new Knight({ letter: 'b', number: 1 }, 'white'),\r\n//     new Knight({ letter: 'g', number: 1 }, 'white'),\r\n//     new Knight({ letter: 'b', number: 8 }, 'black'),\r\n//     new Knight({ letter: 'g', number: 8 }, 'black')\r\n// ]\r\n\r\n// const rooks = [\r\n//     new Rook({ letter: 'a', number: 1 }, 'white'),\r\n//     new Rook({ letter: 'h', number: 1 }, 'white'),\r\n//     new Rook({ letter: 'a', number: 8 }, 'black'),\r\n//     new Rook({ letter: 'h', number: 8 }, 'black'),\r\n// ]\r\n\r\n// const bishops = [\r\n//     new Bishop({ letter: 'c', number: 1 }, 'white'),\r\n//     new Bishop({ letter: 'f', number: 1 }, 'white'),\r\n//     new Bishop({ letter: 'c', number: 8 }, 'black'),\r\n//     new Bishop({ letter: 'f', number: 8 }, 'black'),\r\n// ]\r\n\r\n// const queens = [\r\n//     new Queen({ letter: 'd', number: 1 }, 'white'),\r\n//     new Queen({ letter: 'd', number: 8 }, 'black')\r\n// ]\r\n\r\n// // push pieces from their arrays to the new Board\r\n// // const board = new Board([...pawns, ...knights, ...rooks, ...bishops, ...queens])\r\n\r\n// const board = new Board([\r\n//     new Rook({ letter: 'd', number: 3}, 'white'), \r\n//     new Pawn({ letter: 'f', number: 3 }, 'white'),\r\n//     new Pawn({ letter: 'd', number: 1 }, 'white'),\r\n//     new Pawn({ letter: 'a', number: 3 }, 'white'),\r\n//     new Pawn({ letter: 'd', number: 7 }, 'white'),\r\n// ])\r\n\r\n// console.log('moves:')\r\n// console.log(board.getPotentialMoves({ letter: 'd', number: 3 }).length)",["68","69"],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Pawn.js",["70"],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Rook.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Bishop.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Queen.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Knight.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Piece.js",[],"D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\index.js",["71","72","73","74","75","76","77"],"D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\createBoard.js",["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":1,"column":7,"nodeType":"86","messageId":"87","endLine":1,"endColumn":11},{"ruleId":"84","severity":1,"message":"89","line":2,"column":7,"nodeType":"86","messageId":"87","endLine":2,"endColumn":13},{"ruleId":"84","severity":1,"message":"90","line":3,"column":7,"nodeType":"86","messageId":"87","endLine":3,"endColumn":11},{"ruleId":"84","severity":1,"message":"91","line":4,"column":7,"nodeType":"86","messageId":"87","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"92","line":5,"column":7,"nodeType":"86","messageId":"87","endLine":5,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":26,"column":86,"nodeType":"95","messageId":"96","endLine":26,"endColumn":88},{"ruleId":"93","severity":1,"message":"94","line":26,"column":142,"nodeType":"95","messageId":"96","endLine":26,"endColumn":144},{"ruleId":"97","severity":1,"message":"98","line":69,"column":5,"nodeType":"99","messageId":"96","endLine":71,"endColumn":6},{"ruleId":"80","replacedBy":"100"},{"ruleId":"82","replacedBy":"101"},{"ruleId":"93","severity":1,"message":"94","line":10,"column":36,"nodeType":"95","messageId":"96","endLine":10,"endColumn":38},{"ruleId":"84","severity":1,"message":"102","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":30,"column":8,"nodeType":"105","endLine":30,"endColumn":10,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":39,"column":8,"nodeType":"105","endLine":39,"endColumn":16,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":55,"column":57,"nodeType":"95","messageId":"111","endLine":55,"endColumn":58},{"ruleId":"84","severity":1,"message":"112","line":87,"column":11,"nodeType":"86","messageId":"87","endLine":87,"endColumn":19},{"ruleId":"84","severity":1,"message":"113","line":224,"column":15,"nodeType":"86","messageId":"87","endLine":224,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":274,"column":25,"nodeType":"116","messageId":"117","endLine":283,"endColumn":10},{"ruleId":"84","severity":1,"message":"118","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":52,"column":39,"nodeType":"121","messageId":"122","endLine":52,"endColumn":40,"fix":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Pawn' is assigned a value but never used.","'Knight' is assigned a value but never used.","'Rook' is assigned a value but never used.","'Bishop' is assigned a value but never used.","'Queen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-class-members","Duplicate name 'addPiece'.","MethodDefinition",["124"],["125"],"'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderPieces'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has missing dependencies: 'doRemovePiece' and 'renderPieces'. Either include them or remove the dependency array.",["127"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'addPiece' is assigned a value but never used.","'location' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'isDarkSquare', 'isDarkSquare', 'isDarkSquare'.","ArrowFunctionExpression","unsafeRefs","'React' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"128","text":"129"},"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},[1773,1774],"","Update the dependencies array to be: [renderPieces]",{"range":"134","text":"135"},"Update the dependencies array to be: [doRemovePiece, pieces, renderPieces]",{"range":"136","text":"137"},[1227,1229],"[renderPieces]",[1537,1545],"[doRemovePiece, pieces, renderPieces]"]