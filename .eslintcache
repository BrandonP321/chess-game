[{"D:\\code\\personal-projects\\chess-game\\src\\index.js":"1","D:\\code\\personal-projects\\chess-game\\src\\App.js":"2","D:\\code\\personal-projects\\chess-game\\src\\reportWebVitals.js":"3","D:\\code\\personal-projects\\chess-game\\src\\pages\\GameRoom\\index.js":"4","D:\\code\\personal-projects\\chess-game\\src\\classes\\Board.js":"5","D:\\code\\personal-projects\\chess-game\\src\\classes\\Pawn.js":"6","D:\\code\\personal-projects\\chess-game\\src\\classes\\Rook.js":"7","D:\\code\\personal-projects\\chess-game\\src\\classes\\Bishop.js":"8","D:\\code\\personal-projects\\chess-game\\src\\classes\\Queen.js":"9","D:\\code\\personal-projects\\chess-game\\src\\classes\\Knight.js":"10","D:\\code\\personal-projects\\chess-game\\src\\classes\\Piece.js":"11","D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\index.js":"12","D:\\code\\personal-projects\\chess-game\\src\\pages\\Home\\index.js":"13","D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\board.js":"14","D:\\code\\personal-projects\\chess-game\\src\\classes\\King.js":"15","D:\\code\\personal-projects\\chess-game\\src\\components\\PlayersAside\\index.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":541,"mtime":1608870746308,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":5602,"mtime":1608952976494,"results":"21","hashOfConfig":"18"},{"size":4713,"mtime":1608616119728,"results":"22","hashOfConfig":"18"},{"size":1436,"mtime":1609026941923,"results":"23","hashOfConfig":"18"},{"size":2479,"mtime":1609026974106,"results":"24","hashOfConfig":"18"},{"size":2723,"mtime":1609026565317,"results":"25","hashOfConfig":"18"},{"size":5043,"mtime":1609026965386,"results":"26","hashOfConfig":"18"},{"size":1255,"mtime":1609026927673,"results":"27","hashOfConfig":"18"},{"size":1336,"mtime":1609026271564,"results":"28","hashOfConfig":"18"},{"size":15606,"mtime":1609027332674,"results":"29","hashOfConfig":"18"},{"size":2135,"mtime":1608882606469,"results":"30","hashOfConfig":"18"},{"size":9353,"mtime":1609026894034,"results":"31","hashOfConfig":"18"},{"size":1128,"mtime":1609026918740,"results":"32","hashOfConfig":"18"},{"size":2258,"mtime":1608953455574,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"b24jsc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"D:\\code\\personal-projects\\chess-game\\src\\index.js",[],["73","74"],"D:\\code\\personal-projects\\chess-game\\src\\App.js",["75"],"import logo from './logo.svg';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './App.css';\r\nimport GameRoom from './pages/GameRoom'\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Home />\r\n          </Route>\r\n          <Route exact path='/game/:room'>\r\n            <GameRoom />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\code\\personal-projects\\chess-game\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\chess-game\\src\\pages\\GameRoom\\index.js",["76","77","78","79"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport socketIOClient from 'socket.io-client'\r\nimport GameBoard from '../../components/GameBoard'\r\nimport PlayersAside from '../../components/PlayersAside'\r\nimport './index.css'\r\n\r\nconst ENDPOINT = 'http://localhost:8000/game'\r\n// const ENDPOINT = 'https://chess-123-server.herokuapp.com/game'\r\n\r\n\r\nexport default function GameRoom() {\r\n    const { room } = useParams();\r\n\r\n    // show controls the state of the modal\r\n    const [show, setShow] = useState(true)\r\n\r\n    const [watchers, setWatchers] = useState([])\r\n\r\n    const [username, setUsername] = useState('')\r\n\r\n    const [whiteUsername, setWhiteUsername] = useState('')\r\n    const [blackUsername, setBlackUsername] = useState('')\r\n\r\n    const [whitePiecesTaken, setWhitePiecesTaken] = useState([])\r\n    const [blackPiecesTaken, setBlackPiecesTaken] = useState(['rook', 'rook', 'pawn', 'pawn', 'knight', 'pawn', 'bishop', 'queen', 'rook', 'rook', 'pawn', 'pawn', 'knight', 'pawn', 'bishop', 'queen'])\r\n\r\n    const [team, setTeam] = useState()\r\n\r\n    const teamUp = useRef('none')\r\n    const setTeamUp = data => {\r\n        teamUp.current = data\r\n    }\r\n\r\n    const [isSocketConnected, setIsSocketConnected] = useState(false)\r\n    const socket = useRef()\r\n    const setSocket = data => {\r\n        socket.current = data\r\n\r\n        // update socket state, this tells GameBoard.js that we are connected to the \r\n        //socket.io server and it can create socket.io listerners on that file\r\n        setIsSocketConnected(true)\r\n\r\n\r\n        socket.current.on('connect', data => {\r\n            console.log('connected to game name space')\r\n            // make request to join the current room on the server\r\n            socket.current.emit('joinRoom', room)\r\n        })\r\n\r\n        // when the user joins a room, get all current info on that room\r\n        socket.current.on('roomJoined', room => {\r\n            console.log(room)\r\n            // update states and reference hooks to contain current info on room\r\n            setBlackUsername(room.blackPlayer)\r\n            setWhiteUsername(room.whitePlayer)\r\n            setTeamUp(room.teamUp)\r\n            setWatchers(room.watchers)\r\n        })\r\n\r\n        socket.current.on('usernameCreated', newUser => {\r\n            console.log('username good, color: ' + newUser.color)\r\n            // color will tell whether you are white, black, or a watcher\r\n            // re-render board squares to the respective team color\r\n            setShow(!show)\r\n            setUsername(newUser.username)\r\n            if (newUser.color === 'white') {\r\n                setTeam('white')\r\n                setWhiteUsername(newUser.username)\r\n            } else if (newUser.color === 'black') {\r\n                setTeam('black')\r\n                setBlackUsername(newUser.username)\r\n            } else {\r\n                setTeam('watcher')\r\n            }\r\n        })\r\n\r\n        socket.current.on('notEnoughPlayersToStart', () => {\r\n\r\n        })\r\n\r\n        socket.current.on('startGame', team => {\r\n            console.log('game started ', team)\r\n            setTeamUp(team)\r\n        })\r\n\r\n        // send message to server before user leaves page\r\n        window.onbeforeunload = () => {\r\n            socket.current.emit('userLeaving')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // connect to server main socket\r\n        setSocket(socketIOClient(ENDPOINT))\r\n    }, [])\r\n\r\n    // handles closing of the modal to create a username\r\n    const handleClose = () => {\r\n        setShow(!show)\r\n    }\r\n\r\n    const handleModalInputChange = (event) => {\r\n        const value = event.target.value\r\n        setUsername(value)\r\n    }\r\n\r\n    const attemptUsernameCreate = () => {\r\n        socket.current.emit('createUsername', username)\r\n\r\n        // move this code in to a socket.on() once username validation on server\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='content-wrapper'>\r\n                <div className='game-main-content'>\r\n                    <GameBoard team={team} socket={socket} username={username} teamUp={teamUp} setTeamUp={setTeamUp} isSocketConnected={isSocketConnected} />\r\n                    <button onClick={() => {\r\n                        socket.current.emit('beginGame')\r\n                    }}>Start Game</button>\r\n                </div>\r\n                <div className='game-aside-content'>\r\n                    <PlayersAside \r\n                        team={team} \r\n                        whitePiecesTaken={whitePiecesTaken} \r\n                        blackPiecesTaken={blackPiecesTaken} \r\n                        whiteUsername={whiteUsername}\r\n                        blackUsername={blackUsername}\r\n                        username={username}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Create a Username</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input type='text' className='form-control' value={username} placeholder='Username' onChange={handleModalInputChange} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={attemptUsernameCreate}>Let's Go</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\n","D:\\code\\personal-projects\\chess-game\\src\\classes\\Board.js",["80","81","82","83","84","85","86","87"],"const Pawn = require('./Pawn')\r\nconst Knight = require('./Knight')\r\nconst Rook = require('./Rook')\r\nconst Bishop = require('./Bishop')\r\nconst Queen = require('./Queen')\r\n\r\n\r\nclass Board {\r\n    constructor(pieces = []) {\r\n        this.pieces = pieces\r\n        this.letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\r\n    }\r\n\r\n    addPiece(piece) {\r\n        // add a new piece to the pieces array\r\n        this.pieces.push(piece)\r\n    }\r\n\r\n    removePiece(piece) {\r\n        // remove piece when it is taken off the board\r\n        // this.pieces = this.pieces.filter()\r\n    }\r\n\r\n    getPotentialMoves(pieceLocation) {\r\n        // find which piece is at the given location\r\n        const chosenPiece = this.pieces.filter(piece => piece.currentLocation.letter == pieceLocation.letter && piece.currentLocation.number == pieceLocation.number)[0]\r\n\r\n        // get possible locations of piece\r\n        let possibleLocations = chosenPiece.getPossibleMoves()\r\n\r\n        // locations of friendly pieces blocking a path\r\n        const blockedSpots = []\r\n\r\n        // filter possible locations by pieces locations of other pieces on board\r\n        let availableSpots = possibleLocations.filter(newLocation => {\r\n            // iterate over pieces on board\r\n            for (var i = 0; i < this.pieces.length; i++) {\r\n                let piece = this.pieces[i]\r\n\r\n\r\n                // if piece's location matches potential location and is not friendly\r\n                if (piece.currentLocation.letter === newLocation.letter &&\r\n                    piece.currentLocation.number === newLocation.number) {\r\n                    // if piece being moved is a knight, we don't need to worry about a path being blocked by a friendly piece\r\n                    if (chosenPiece.pieceType === 'knight') {\r\n                        return false\r\n                    } else if (piece.color === chosenPiece.color) {\r\n                        // add location of piece to blockedSpots array\r\n                        blockedSpots.push(piece.currentLocation)\r\n                        // return false to remove this spot option\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            // return true if nothing has been returned yet\r\n            return true\r\n        })\r\n        \r\n        console.log('spots before removing paths:')\r\n        // if any paths are blocked, remove the blocked spots from possible moves\r\n        if (blockedSpots.length > 0) {\r\n            availableSpots = chosenPiece.removeBlockedPaths(blockedSpots, availableSpots)\r\n        }\r\n\r\n        \r\n        return availableSpots\r\n    }\r\n\r\n    addPiece(piece) {\r\n        this.pieces.push(piece)\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Board;\r\n\r\n\r\n\r\n\r\n// // add all pieces to board\r\n// const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\r\n\r\n// const pawns = []\r\n// // create white pawns and push them to the array\r\n// for (let i = 0; i < 8; i++) {\r\n//     let newPawn = new Pawn({ letter: letters[i], number: 2 }, 'white')\r\n    \r\n//     pawns.push(newPawn)\r\n// }\r\n// // create black pawns and push them to the array\r\n// for (let i = 0; i < 8; i++) {\r\n//     let newPawn = new Pawn({ letter: letters[i], number: 7 }, 'black')\r\n    \r\n//     pawns.push(newPawn)\r\n// }\r\n\r\n// const knights = [\r\n//     new Knight({ letter: 'b', number: 1 }, 'white'),\r\n//     new Knight({ letter: 'g', number: 1 }, 'white'),\r\n//     new Knight({ letter: 'b', number: 8 }, 'black'),\r\n//     new Knight({ letter: 'g', number: 8 }, 'black')\r\n// ]\r\n\r\n// const rooks = [\r\n//     new Rook({ letter: 'a', number: 1 }, 'white'),\r\n//     new Rook({ letter: 'h', number: 1 }, 'white'),\r\n//     new Rook({ letter: 'a', number: 8 }, 'black'),\r\n//     new Rook({ letter: 'h', number: 8 }, 'black'),\r\n// ]\r\n\r\n// const bishops = [\r\n//     new Bishop({ letter: 'c', number: 1 }, 'white'),\r\n//     new Bishop({ letter: 'f', number: 1 }, 'white'),\r\n//     new Bishop({ letter: 'c', number: 8 }, 'black'),\r\n//     new Bishop({ letter: 'f', number: 8 }, 'black'),\r\n// ]\r\n\r\n// const queens = [\r\n//     new Queen({ letter: 'd', number: 1 }, 'white'),\r\n//     new Queen({ letter: 'd', number: 8 }, 'black')\r\n// ]\r\n\r\n// // push pieces from their arrays to the new Board\r\n// // const board = new Board([...pawns, ...knights, ...rooks, ...bishops, ...queens])\r\n\r\n// const board = new Board([\r\n//     new Rook({ letter: 'd', number: 3}, 'white'), \r\n//     new Pawn({ letter: 'f', number: 3 }, 'white'),\r\n//     new Pawn({ letter: 'd', number: 1 }, 'white'),\r\n//     new Pawn({ letter: 'a', number: 3 }, 'white'),\r\n//     new Pawn({ letter: 'd', number: 7 }, 'white'),\r\n// ])\r\n\r\n// console.log('moves:')\r\n// console.log(board.getPotentialMoves({ letter: 'd', number: 3 }).length)",["88","89"],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Pawn.js",["90"],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Rook.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Bishop.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Queen.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Knight.js",[],"D:\\code\\personal-projects\\chess-game\\src\\classes\\Piece.js",[],"D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\index.js",["91","92","93","94","95","96","97","98","99","100","101","102"],"D:\\code\\personal-projects\\chess-game\\src\\pages\\Home\\index.js",["103"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport socketIOClient from 'socket.io-client'\r\n\r\nconst ENDPOINT = 'http://localhost:8000'\r\n// const ENDPOINT = 'https://chess-123-server.herokuapp.com'\r\n\r\nexport default function Home() {\r\n    const socket = useRef()\r\n    const setSocket = data => {\r\n        socket.current = data\r\n\r\n        // when socket is defined, create listeners\r\n        socket.current.on('connect', () => {\r\n            console.log('connected')\r\n        })\r\n        \r\n        socket.current.on('newRoomCreated', room => {\r\n            console.log('created room ' + room)\r\n            // redirect to game room with room's id\r\n            window.location.href = '/game/' + room\r\n        })\r\n        \r\n        socket.current.on('allowRoomJoin', room => {\r\n            // redirect to the game with the given room id\r\n            window.location.href = '/game/' + room\r\n        })\r\n    }    \r\n\r\n    // on load, connect to socket.io server\r\n    useEffect(() => {\r\n        setSocket(socketIOClient(ENDPOINT))\r\n    }, [])\r\n\r\n    const handleNewRoomCreate = () => {\r\n        // tell socket.io server to make a new room for the user\r\n        socket.current.emit('createNewRoom')\r\n    }\r\n\r\n    const handleAttemptRoomJoin = (event) => {\r\n        event.preventDefault();\r\n        \r\n        // roomid from input field\r\n        const roomId = event.target.children[0].value\r\n\r\n        // tell socket.io server to check for a room with the given id\r\n        socket.current.emit('joinExistingRoom', roomId)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Create New Room</h2>\r\n                <button className='new-room-btn' onClick={handleNewRoomCreate}>Create New Room</button>\r\n            </div>\r\n            <div>\r\n                <h2>Join Existing Room</h2>\r\n                <form className='join-room-form' onSubmit={handleAttemptRoomJoin}>\r\n                    <input className='form-control' type='text' placeholder='Room ID'></input>\r\n                    <button className='join-room-btn'>Join</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\chess-game\\src\\components\\GameBoard\\board.js",["104","105","106"],"D:\\code\\personal-projects\\chess-game\\src\\classes\\King.js",[],"D:\\code\\personal-projects\\chess-game\\src\\components\\PlayersAside\\index.js",["107","108","109","110"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport './index.css'\r\n\r\nconst pieceIcons = {\r\n    rook: <i class=\"fas fa-chess-rook taken-piece-icon\"></i>,\r\n    knight: <i class=\"fas fa-chess-knight taken-piece-icon\"></i>,\r\n    bishop: <i class=\"fas fa-chess-bishop taken-piece-icon\"></i>,\r\n    queen: <i class=\"fas fa-chess-queen taken-piece-icon\"></i>,\r\n    king: <i class=\"fas fa-chess-king taken-piece-icon\"></i>,\r\n    pawn: <i class=\"fas fa-chess-pawn taken-piece-icon\"></i>\r\n}\r\n\r\nexport default function PlayersAside(props) {\r\n    const { team, whitePiecesTaken, blackPiecesTaken, whiteUsername, blackUsername, username } = props\r\n    \r\n    return (\r\n        <div>\r\n            <div className='player-info-container'>\r\n                <h3 className='player-username'>\r\n                    <span><i class=\"fas fa-chess-king team-icon icon-white\"></i> </span>\r\n                    {!whiteUsername ? 'No Player': whiteUsername === username ? 'You': whiteUsername}\r\n                </h3>\r\n                <div className='taken-pieces-container taken-pieces-black'>\r\n                    {blackPiecesTaken.map(piece => {\r\n                        return (\r\n                            <div className='taken-piece-container'>\r\n                                {pieceIcons[piece]}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className='player-info-container'>\r\n                <h3 className='player-username'>\r\n                    <span><i class=\"fas fa-chess-king team-icon icon-black\"></i> </span>\r\n                    {!blackUsername ? 'No Player': blackUsername === username ? 'You': blackUsername}\r\n                </h3>\r\n                <div className='taken-pieces-container taken-pieces-white'>\r\n                    {whitePiecesTaken.map(piece => {\r\n                        return (\r\n                            <div className='taken-piece-container'>\r\n                                {pieceIcons[piece]}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className='spectators-container'>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":19,"column":12,"nodeType":"117","messageId":"118","endLine":19,"endColumn":20},{"ruleId":"115","severity":1,"message":"120","line":26,"column":30,"nodeType":"117","messageId":"118","endLine":26,"endColumn":49},{"ruleId":"115","severity":1,"message":"121","line":27,"column":30,"nodeType":"117","messageId":"118","endLine":27,"endColumn":49},{"ruleId":"122","severity":1,"message":"123","line":97,"column":8,"nodeType":"124","endLine":97,"endColumn":10,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"126","line":1,"column":7,"nodeType":"117","messageId":"118","endLine":1,"endColumn":11},{"ruleId":"115","severity":1,"message":"127","line":2,"column":7,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"128","line":3,"column":7,"nodeType":"117","messageId":"118","endLine":3,"endColumn":11},{"ruleId":"115","severity":1,"message":"129","line":4,"column":7,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"115","severity":1,"message":"130","line":5,"column":7,"nodeType":"117","messageId":"118","endLine":5,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":26,"column":86,"nodeType":"133","messageId":"134","endLine":26,"endColumn":88},{"ruleId":"131","severity":1,"message":"132","line":26,"column":142,"nodeType":"133","messageId":"134","endLine":26,"endColumn":144},{"ruleId":"135","severity":1,"message":"136","line":69,"column":5,"nodeType":"137","messageId":"134","endLine":71,"endColumn":6},{"ruleId":"111","replacedBy":"138"},{"ruleId":"113","replacedBy":"139"},{"ruleId":"131","severity":1,"message":"132","line":11,"column":36,"nodeType":"133","messageId":"134","endLine":11,"endColumn":38},{"ruleId":"115","severity":1,"message":"140","line":1,"column":38,"nodeType":"117","messageId":"118","endLine":1,"endColumn":47},{"ruleId":"115","severity":1,"message":"141","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":19},{"ruleId":"115","severity":1,"message":"142","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"115","severity":1,"message":"143","line":7,"column":31,"nodeType":"117","messageId":"118","endLine":7,"endColumn":51},{"ruleId":"115","severity":1,"message":"144","line":21,"column":46,"nodeType":"117","messageId":"118","endLine":21,"endColumn":54},{"ruleId":"115","severity":1,"message":"145","line":24,"column":12,"nodeType":"117","messageId":"118","endLine":24,"endColumn":25},{"ruleId":"122","severity":1,"message":"146","line":76,"column":8,"nodeType":"124","endLine":76,"endColumn":10,"suggestions":"147"},{"ruleId":"122","severity":1,"message":"148","line":102,"column":8,"nodeType":"124","endLine":102,"endColumn":27,"suggestions":"149"},{"ruleId":"122","severity":1,"message":"150","line":121,"column":8,"nodeType":"124","endLine":121,"endColumn":27,"suggestions":"151"},{"ruleId":"115","severity":1,"message":"152","line":139,"column":11,"nodeType":"117","messageId":"118","endLine":139,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":221,"column":29,"nodeType":"155","messageId":"156","endLine":230,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":255,"column":57,"nodeType":"133","messageId":"159","endLine":255,"endColumn":58},{"ruleId":"115","severity":1,"message":"160","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"161","line":68,"column":25,"nodeType":"155","messageId":"156","endLine":77,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":187,"column":9,"nodeType":"164","messageId":"165","endLine":206,"endColumn":10},{"ruleId":"166","severity":1,"message":"167","line":212,"column":1,"nodeType":"168","endLine":218,"endColumn":2},{"ruleId":"115","severity":1,"message":"160","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"169","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":33},{"ruleId":"115","severity":1,"message":"170","line":1,"column":35,"nodeType":"117","messageId":"118","endLine":1,"endColumn":44},{"ruleId":"115","severity":1,"message":"171","line":14,"column":13,"nodeType":"117","messageId":"118","endLine":14,"endColumn":17},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'watchers' is assigned a value but never used.","'setWhitePiecesTaken' is assigned a value but never used.","'setBlackPiecesTaken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSocket'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'Pawn' is assigned a value but never used.","'Knight' is assigned a value but never used.","'Rook' is assigned a value but never used.","'Bishop' is assigned a value but never used.","'Queen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-class-members","Duplicate name 'addPiece'.","MethodDefinition",["172"],["173"],"'Component' is defined but never used.","'useParams' is defined but never used.","'render' is defined but never used.","'createWhiteTeamBoard' is assigned a value but never used.","'username' is assigned a value but never used.","'doRemovePiece' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPieces'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'forceMove', 'setPieces', 'setTeamUp', 'socket', and 'teamUp'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'createClickEventListener' and 'renderPieces'. Either include them or remove the dependency array.",["177"],"'addPiece' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'boardSquares', 'isDarkSquare', 'isDarkSquare', 'isDarkSquare'.","ArrowFunctionExpression","unsafeRefs","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useState' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'isDarkSquare', 'isDarkSquare', 'isDarkSquare'.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","'useEffect' is defined but never used.","'team' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [setSocket]",{"range":"186","text":"187"},"Update the dependencies array to be: [setPieces]",{"range":"188","text":"189"},"Update the dependencies array to be: [forceMove, isSocketConnected, setPieces, setTeamUp, socket, teamUp]",{"range":"190","text":"191"},"Update the dependencies array to be: [boardSquaresState, createClickEventListener, renderPieces]",{"range":"192","text":"193"},[3504,3506],"[setSocket]",[3141,3143],"[setPieces]",[4202,4221],"[forceMove, isSocketConnected, setPieces, setTeamUp, socket, teamUp]",[4915,4934],"[boardSquaresState, createClickEventListener, renderPieces]"]